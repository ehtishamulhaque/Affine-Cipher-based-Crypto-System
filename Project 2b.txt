// Project 2(b)
//Affine Cipher Key generator

#include<iostream>
#include<stdlib.h>
#include<cstdlib>
#include<random>
using namespace std;

int c, d;


string encryptMessage(string msg)
{
    string cipher = "";
    for (int i = 0; i < msg.length(); i++)
    {
        if (msg[i] != ' ')

            cipher = cipher +
            (char)((((c * (msg[i] - 'A')) + d) % 26) + 'A');

        else

            cipher += msg[i];
    }
    return cipher;
}

string decryptCipher(string cipher)
{
    string msg = "";
    int a_inv = 0;
    int flag = 0;


    for (int i = 0; i < 26; i++)
    {
        flag = (c * i) % 26;


        if (flag == 1)
        {
            a_inv = i;
        }
    }
    for (int i = 0; i < cipher.length(); i++)
    {
        if (cipher[i] != ' ')

            msg = msg +
            (char)(((a_inv * ((cipher[i] + 'A' - d)) % 26)) + 'A');

        else

            msg += cipher[i];
    }

    return msg;
}



int main(void)
{
    
    //string msg = "WELCOME";
    string msg;
    std::cout << "Enter the message to encrypt and decrypt in Capital letter" << std::endl;
    std::cin >> msg;
    
    
   
    int  c, j;
    int d = 26;
    for (c = 1; c <= 25; c++)
    {
        for (j = 2; j < c; j++)
        {
            if (c % j == 0) {
                break;
            }
        }
        if (c == j) {

            std::cout << c << endl;
            


        }

    }
     
    //srand(time(0));  // Initialize random number generator.

    //Random number generator for KEY 1
    
        std::cout << "K1 : "<<rand() % c << endl;
   
    
        //Random number generator for KEY 2
        
        std::cout << "K2 : "<<rand() % d << endl;
        
        
        /*
        std::cout << "Enter key 1 Generated by random generator:" << std::endl;
        std::cin >> c;
        std::cout << "Enter key 2 Generated by random generator:" << std::endl;
        std::cin >> d; */


    //Encryption function
    string cipherText = encryptMessage(msg);
    std::cout << "Encrypted Message is : " << cipherText << endl;

    //Decryption function
    std::cout << "Decrypted Message is: " << decryptCipher(cipherText);

    std::cin.ignore();
    return 0;
}